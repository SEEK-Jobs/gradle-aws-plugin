plugins {
    id "com.gradle.plugin-publish" version "0.9.9"
    id 'com.github.maiflai.scalatest' version '0.18'
}

apply plugin: 'scala'
apply plugin: 'maven'

group = 'seek'
ext.baseVersion = file('version.txt').text.trim()
version = "${baseVersion}-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
}

ext {
    awsVersion = '1.11.241'
    circeVersion = '0.9.0-M2'
}

configurations {
    scalaCompiler
}

configurations.scalaCompiler.transitive = false

configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    compile gradleApi()
    compile "org.scala-lang:scala-library:${scalaVersion}"
    compile "com.typesafe.scala-logging:scala-logging_${scalaBuildVersion}:3.5.0"
    compile "org.typelevel:cats-core_${scalaBuildVersion}:1.0.0-RC1"
    compile "org.typelevel:cats-effect_${scalaBuildVersion}:0.5"
    compile "co.fs2:fs2-core_${scalaBuildVersion}:0.10.0-M8"
    compile "co.fs2:fs2-io_${scalaBuildVersion}:0.10.0-M8"
    compile "io.circe:circe-core_${scalaBuildVersion}:${circeVersion}"
    compile "io.circe:circe-generic_${scalaBuildVersion}:${circeVersion}"
    compile "io.circe:circe-generic-extras_${scalaBuildVersion}:${circeVersion}"
    compile "io.circe:circe-parser_${scalaBuildVersion}:${circeVersion}"
    compile "io.circe:circe-yaml_${scalaBuildVersion}:0.7.0-M1"
    compile "com.typesafe:config:1.3.0"
    compile "com.github.pureconfig:pureconfig_${scalaBuildVersion}:0.7.2"
    compile "com.github.mpilquist:simulacrum_${scalaBuildVersion}:0.11.0"
    compile "org.spire-math:kind-projector_${scalaBuildVersion}:0.9.4"
    compile "com.amazonaws:aws-java-sdk-s3:${awsVersion}"
    compile "com.amazonaws:aws-java-sdk-autoscaling:${awsVersion}"
    compile "com.amazonaws:aws-java-sdk-cloudformation:${awsVersion}"
    compile "com.amazonaws:aws-java-sdk-ssm:${awsVersion}"
    compile "com.amazonaws:aws-java-sdk-sts:${awsVersion}"

    compileOnly "com.github.dwickern:scala-nameof_${scalaBuildVersion}:1.0.3"

    scalaCompiler "org.scalamacros:paradise_${scalaVersion}:2.1.1"
    scalaCompiler "org.spire-math:kind-projector_${scalaBuildVersion}:0.9.4"

    testCompile "org.scalatest:scalatest_${scalaBuildVersion}:3.0.4"
    testCompile "org.scalacheck:scalacheck_${scalaBuildVersion}:1.13.5"
    testRuntime 'org.pegdown:pegdown:1.6.0'
}

def scalaCompileOptions = ['-language:implicitConversions', '-language:higherKinds']
project.configurations.scalaCompiler.files.each { scalaCompileOptions += "-Xplugin:${it.path}".toString() }
compileScala.scalaCompileOptions.additionalParameters = scalaCompileOptions
compileTestScala.scalaCompileOptions.additionalParameters = scalaCompileOptions

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
    distributionType = 'all'
}

pluginBundle {
    website = 'https://github.com/SEEK-Jobs/gradle-aws-plugin'
    vcsUrl = 'https://github.com/SEEK-Jobs/gradle-aws-plugin'
    def pluginTags = ['SEEK', 'AWS', 'CloudFormation', 'Cloud', 'Config',
                      'Scala', 'Infrastructure', 'Deploy', 'Deployment', 'DevOps']

    plugins {
        awsPlugin {
            id = 'seek.aws'
            displayName = 'AWS Plugin'
            version = baseVersion
            description = 'AWS Plugin for Gradle'
            tags = pluginTags
        }
        cloudFormationPlugin {
            id = 'seek.cloudformation'
            displayName = 'CloudFormation Plugin'
            version = baseVersion
            description = 'CloudFormation Plugin for Gradle'
            tags = pluginTags
        }
    }

    mavenCoordinates {
        version = baseVersion
    }
}

publishPlugins.dependsOn check
